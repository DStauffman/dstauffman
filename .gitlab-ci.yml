image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DCS_TESTS_DIR: "$CI_PROJECT_DIR/dstauffman/tests"
  QT_QPA_PLATFORM: "offscreen"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
  - .cache/pip
  - static/
  - everything/
  #- py37/
  - core_only/

stages:
  - Environments
  - Static Analysis
  - Test
  - Coverage

make_envs:
  stage: Environments
  script:
  # Install dependencies for PySide6  (to fix bugs https://bugreports.qt.io/browse/PYSIDE-1547 & https://bugreports.qt.io/browse/QTBUG-89754)
  - apt-get update -qq && apt-get install -y -qq libopengl0
  # Create virtual environments
  - python --version
  - pip install --upgrade pip
  - pip install virtualenv
  - virtualenv static
  - source static/bin/activate
  - python -m pip install wheel
  - python -m pip install coverage flake8 h5py matplotlib mypy numpy pandas pprofile pyarrow pylint PySide6 pytest qtpy requests types-requests scipy tblib urllib3
  - deactivate
  - virtualenv everything
  - source everything/bin/activate
  - python -m pip install wheel
  - python -m pip install coverage datashader fastparquet h5py matplotlib mypy numba numpy pandas pprofile pyarrow PySide6 pytest qtpy requests scipy tblib urllib3
  - deactivate
  - virtualenv core_only
  - source core_only/bin/activate
  - python -m pip install wheel
  - python -m pip install coverage pytest
  - deactivate
  #- virtualenv py37 --python=/usr/bin/python3.7  # TODO: just different docker image
  #- source py37/bin/activate
  #- python -m pip install wheel
  #- python -m pip install coverage flake8 h5py matplotlib mypy numpy pandas pprofile pyarrow pylint PyQt5 pytest requests scipy tblib urllib3
  #- deactivate

mypy:
  stage: Static Analysis
  allow_failure: true
  script:
  - pwd
  - ls -l
  - source static/bin/activate
  - python --version
  - mypy --version
  - mypy

#flake8:
#  stage: Static Analysis
#  allow_failure: true
#  script:
#  - flake8 --max-line-length=100 dstauffman/**/*.py

#pylint:
#  stage: Static Analysis
#  allow_failure: true
#  script:
#  - pylint -d C0301 dstauffman/**/*.py

unit_test:
  stage: Test
  needs: ["make_envs"]
  artifacts:
    paths:
    - $DCS_TESTS_DIR/.coverage.full
    expire_in: 4 hours
  script:
  - pwd
  - ls -l
  - source everything/bin/activate
  - python -m dstauffman tests --coverage --cov_file $DCS_TESTS_DIR/.coverage.full

core_test:
  stage: Test
  needs: ["make_envs"]
  artifacts:
    paths:
    - $DCS_TESTS_DIR/.coverage.core
    expire_in: 4 hours
  script:
  - pwd
  - ls -l
  - source core_only/bin/activate
  - python -m dstauffman tests --coverage --cov_file $DCS_TESTS_DIR/.coverage.core

no_numba_test:
  stage: Test
  needs: ["make_envs"]
  artifacts:
    paths:
    - $DCS_TESTS_DIR/.coverage.no_numba
    expire_in: 4 hours
  script:
  - pwd
  - ls -l
  - source static/bin/activate
  - python -m dstauffman tests --coverage --cov_file $DCS_TESTS_DIR/.coverage.no_numba

command_test:
  stage: Test
  needs: ["make_envs"]
  artifacts:
    paths:
    - $DCS_TESTS_DIR/.coverage.commands
    expire_in: 4 hours
  script:
  - pwd
  - ls -l
  - source core_only/bin/activate
  - export COVERAGE_FILE=$DCS_TESTS_DIR/.coverage.commands
  - export PYTHONPATH=$DCS_TESTS_DIR/../..:$PYTHONPATH
  - coverage run $DCS_TESTS_DIR/test_commands_help.py

basic_test:
  stage: Test
  script:
  - pwd
  - ls -l
  - source core_only/bin/activate
  - python -m dstauffman tests -u

doc_test:
  stage: Test
  needs: ["make_envs"]
  script:
  - pwd
  - ls -l
  - source everything/bin/activate
  - python -m dstauffman tests -d

coverage_report:
  stage: Coverage
  needs: ["unit_test", "core_test", "no_numba_test", "command_test"]
  artifacts:
    paths:
    - $DCS_TESTS_DIR/coverage_html_report/*
    expire_in: 1 week
  script:
  - cd $DCS_TESTS_DIR
  - pwd
  - ls -l
  - source static/bin/activate
  - export COVERAGE_FILE=.coverage
  - coverage --version
  - coverage combine
  - coverage html
