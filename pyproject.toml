#[build-system]
#requires = ["wheel", "setuptools"]
#build-backend = "setuptools.build_meta"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[metadata]
name = "dstauffman"
#version = get_version()
description = "Generic python utilities for Aerospace applications"
long_description = "file: README.rst"
long_description_content_type = "text/markdown; charset=UTF-8"  # TODO: RestructuredText
url = "https://github.com/DStauffman/dstauffman"
author = "David C. Stauffer"
author_email = "dstauffman@yahoo.com"
license = ""
license_file = "file: LICENSE.txt"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
project_urls = "Source = https://github.com/DStauffman/dstauffman"

[bdist_wheel]
universal = 1

[tool.poetry]
name = "dstauffman"
version = "3.1.0"
description = "Generic python utilities for Aerospace applications"
authors = ["David C. Stauffer <dstauffman@yahoo.com>"]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
slog = {path = "../slog/", develop = false}
black = {version = "^22.0.0", optional = true}
datashader = {version = "^0.13", optional = true}
flake8 = {version = "^4.0.1", optional = true}
h5py = {version = "^3.2.1", optional = true}
isort = {version = "^5.9.3", optional = true}
matplotlib = {version = "^3.4.3", optional = true}
mypy = {version = "^0.950", optional = true}
numba = {version = "0.55.1", optional = true}  # TODO: make ^0.52?
numpy = {version = "^1.20", optional = true}
pandas = {version = "^1.3.4", optional = true}
qtpy = {version = "^1.10.0", optional = true}  # wraps any of PyQt5, PyQt6, PySide2, or PySide6
pylint = {version = "^2.0.0", optional = true}
PyQt5 = {version = "^5.12.0", optional = true}
PyQt5-stubs = {version = "^5.0.0", optional = true}
pyqt5-sip = {version = "^12.10.1", optional = true}  # temp hack for poetry not grabbing it correctly
pyqt5-qt5 = {version = "^5.15.2", optional = true}  # temp hack for poetry not grabbing it correctly
#PySide6 = {version = "^6.3.0", optional = true}  # not yet supported by poetry
pytest = {version = "^6.2.4", optional = true}
pytest-cov = {version = "^3.0.0", optional = true}
scipy = {version = "^1.7.0", optional = true}
spyder-kernels = {version = "^2.3.0", optional = true}
tblib = {version = "^1.7.0", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^6.2"
pytest-cov = "^3.0.0"

[tool.poetry.extras]
# Note: use combination of numeric and static for mypy type checking (excludes numba/datashader, which can confuse mypy)
static = ["black", "flake8", "isort", "pycodestyle", "pylint", "mypy", "PyQt5-stubs"]
spyder = ["spyder-kernels"]
numeric = ["h5py", "matplotlib", "numpy", "pandas", "PyQt5", "pyqt5-sip", "pyqt5-qt5", "qtpy", "scipy", "tblib"]
shader = ["datashader", "h5py", "matplotlib", "numba", "numpy", "pandas", "PyQt5", "pyqt5-sip", "pyqt5-qt5", "qtpy", "scipy", "tblib"]

[tool.black]
line-length = 128
target_version = ["py39"]

[tool.isort]
py_version = 39
profile = "black"
line_length = 128
combine_as_imports = true
force_sort_within_sections = true
case_sensitive = true
force_alphabetical_sort_within_sections = true
skip_glob = ["__init__.py", "*/__init__.py"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "SLOG", "FIRSTPARTY", "LOCALFOLDER"]
known_slog = ["slog"]

[tool.mypy]
show_error_codes       = true
warn_return_any        = true
warn_unused_configs    = true
warn_unreachable       = true
warn_unused_ignores    = true
#disallow_untyped_calls = true
#disallow_untyped_defs  = true
files                  = ["$MYPY_CONFIG_FILE_DIR/dstauffman/**/*.py", "$MYPY_CONFIG_FILE_DIR/scripts/*.py"]
mypy_path              = "$MYPY_CONFIG_FILE_DIR/../slog"
#linecount_report       = ".mypy_report"
#any_exprs_report       = ".mypy_report"
#html_report            = ".mypy_report"
#cobertura_xml_report   = ".mypy_report"
#linecoverage_report    = ".mypy_report"
#lineprecision_report   = ".mypy_report"
#xml_report             = ".mypy_report"

[[tool.mypy.overrides]]
module = [
    "coverage.*",
    "datashader.*",
    "h5py.*",
    "matplotlib.*",
    "numba.*",
    # "numpy.*",
    "pandas.*",
    "PIL.*",
    # "PyQt5.*",
    "pytest.*",
    "qtpy.*",  # Note would be nice to get rid of this, since PyQt5 is actually stubbed
    # "request.*",
    "scipy.*",
    "tblib.*",
    "urllib3.*"
]
ignore_missing_imports = true
